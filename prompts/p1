#!/bin/zsh

## Uncomment to disable git info
#POWERLINE_GIT=0

__powerline() {
    # Colorscheme
    RESET="%{$fg[default]%}"
    CYAN="%{$fg[cyan]%}"
    BLUE="%{$fg[blue]%}"
    GREEN="%{$fg[green]%}"
    RED="%{$fg[red]%}"
    YELLOW="%{$fg[yellow]%}"

    COLOR_CWD=$CYAN
    COLOR_GIT=$YELLOW

    SYMBOL_GIT_BRANCH='⑂'
    SYMBOL_GIT_MODIFIED='*'
    SYMBOL_GIT_PUSH='⇡'
    SYMBOL_GIT_PULL='⇣'
    DOT='●'

    PS_SYMBOL="$DOT"

    __git_info() {
        [[ $POWERLINE_GIT = 0 ]] && return # disabled
        hash git 2>/dev/null || return # git not found
        local git_eng="env LANG=C git"   # force git output in English

        # get current branch name
        local ref=$(env LANG=C git symbolic-ref --short HEAD 2>/dev/null)

        if [[ -n "$ref" ]]; then
            # prepend branch symbol
            ref=$SYMBOL_GIT_BRANCH$ref
        else
            # get tag name or short unique hash
            ref=$(env LANG=C git describe --tags --always 2>/dev/null)
        fi

        [[ -n "$ref" ]] || return  # not a git repo

        local marks

        # scan first two lines of output from `git status`
        setopt local_options BASH_REMATCH
        while IFS= read -r line; do
            if [[ $line =~ ^## ]]; then # header line
              [[ $line =~ ahead\ ([0-9]+) ]] && marks+=" $SYMBOL_GIT_PUSH${BASH_REMATCH[2]}"
              [[ $line =~ behind\ ([0-9]+) ]] && marks+=" $SYMBOL_GIT_PULL${BASH_REMATCH[2]}"
            #branch is modified if output contains more lines after header line
            else
                marks="$SYMBOL_GIT_MODIFIED$marks"
                break
            fi
        done < <(env LANG=C git status --porcelain --branch 2>/dev/null)  # note the space between the two <

        # print the git branch segment without a trailing newline
        printf " $ref$marks"
    }

    __zshPrompt() {
        # Check the exit code of the previous command and display different
        # colors in the prompt accordingly.
        if [ $? -eq 0 ]; then
            local symbol="$GREEN $PS_SYMBOL $RESET"
        else
            local symbol="$RED $PS_SYMBOL $RESET"
        fi

        local cwd="${GREEN}clouddesk${RESET}:${COLOR_CWD}%c${RESET}"

        __powerline_git_info="$(__git_info)"
        local git="${COLOR_GIT}${__powerline_git_info}${RESET}"

        PROMPT="$cwd$git$symbol"
    }

    precmd_functions+='__zshPrompt'

}

__powerline
